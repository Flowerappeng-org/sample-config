###
###              ejabberd configuration file
###
### The parameters used in this configuration file are explained at
###
###       https://docs.ejabberd.im/admin/configuration
###
### The configuration file is written in YAML.
### *******************************************************
### *******           !!! WARNING !!!               *******
### *******     YAML IS INDENTATION SENSITIVE       *******
### ******* MAKE SURE YOU INDENT SECTIONS CORRECTLY *******
### *******************************************************
### Refer to http://en.wikipedia.org/wiki/YAML for the brief description.
###

hosts:
  - msg-1.platform-1.runwater.app
  - msg-2.platform-1.runwater.app
  - msg-3.platform-1.runwater.app
  - msg-4.platform-1.runwater.app
  - msg-5.platform-1.runwater.app
  - msg-6.platform-1.runwater.app
  - msg-7.platform-1.runwater.app
  - msg-8.platform-1.runwater.app
  - msg-9.platform-1.runwater.app
  - msg-10.platform-1.runwater.app
  - msg-11.platform-1.runwater.app
  - msg-12.platform-1.runwater.app
  - msg-13.platform-1.runwater.app
  - msg-14.platform-1.runwater.app
  - msg-15.platform-1.runwater.app
  - msg-16.platform-1.runwater.app
  - msg-17.platform-1.runwater.app
  - msg-18.platform-1.runwater.app
  - msg-19.platform-1.runwater.app
  - msg-20.platform-1.runwater.app
  - msg-21.platform-1.runwater.app
  - msg-22.platform-1.runwater.app
  - msg-23.platform-1.runwater.app
  - msg-24.platform-1.runwater.app
  - msg-25.platform-1.runwater.app
  - msg-26.platform-1.runwater.app
  - msg-27.platform-1.runwater.app
  - msg-28.platform-1.runwater.app
  - msg-29.platform-1.runwater.app
  - msg-30.platform-1.runwater.app
  - msg-31.platform-1.runwater.app
  - msg-32.platform-1.runwater.app
  - msg-33.platform-1.runwater.app
  - msg-34.platform-1.runwater.app
  - msg-35.platform-1.runwater.app
  - msg-36.platform-1.runwater.app
  - msg-37.platform-1.runwater.app
  - msg-38.platform-1.runwater.app
  - msg-39.platform-1.runwater.app
  - msg-40.platform-1.runwater.app
  - msg-41.platform-1.runwater.app
  - msg-42.platform-1.runwater.app
  - msg-43.platform-1.runwater.app
  - msg-44.platform-1.runwater.app
  - msg-45.platform-1.runwater.app
  - msg-46.platform-1.runwater.app
  - msg-47.platform-1.runwater.app
  - msg-48.platform-1.runwater.app
  - msg-49.platform-1.runwater.app
  - msg-50.platform-1.runwater.app
  - msg-51.platform-1.runwater.app
  - msg-52.platform-1.runwater.app
  - msg-53.platform-1.runwater.app
  - msg-54.platform-1.runwater.app
  - msg-55.platform-1.runwater.app
  - msg-56.platform-1.runwater.app
  - msg-57.platform-1.runwater.app
  - msg-58.platform-1.runwater.app
  - msg-59.platform-1.runwater.app
  - msg-60.platform-1.runwater.app
  - msg-61.platform-1.runwater.app
  - msg-62.platform-1.runwater.app
  - msg-63.platform-1.runwater.app
  - msg-64.platform-1.runwater.app
  - msg-65.platform-1.runwater.app
  - msg-66.platform-1.runwater.app
  - msg-67.platform-1.runwater.app
  - msg-68.platform-1.runwater.app
  - msg-69.platform-1.runwater.app
  - msg-70.platform-1.runwater.app
  - msg-71.platform-1.runwater.app
  - msg-72.platform-1.runwater.app
  - msg-73.platform-1.runwater.app
  - msg-74.platform-1.runwater.app
  - msg-75.platform-1.runwater.app
  - msg-76.platform-1.runwater.app
  - msg-77.platform-1.runwater.app
  - msg-78.platform-1.runwater.app
  - msg-79.platform-1.runwater.app
  - msg-80.platform-1.runwater.app
  - msg-81.platform-1.runwater.app
  - msg-82.platform-1.runwater.app
  - msg-83.platform-1.runwater.app
  - msg-84.platform-1.runwater.app
  - msg-85.platform-1.runwater.app
  - msg-86.platform-1.runwater.app
  - msg-87.platform-1.runwater.app
  - msg-88.platform-1.runwater.app
  - msg-89.platform-1.runwater.app
  - msg-90.platform-1.runwater.app
  - msg-91.platform-1.runwater.app
  - msg-92.platform-1.runwater.app
  - msg-93.platform-1.runwater.app
  - msg-94.platform-1.runwater.app
  - msg-95.platform-1.runwater.app
  - msg-96.platform-1.runwater.app
  - msg-97.platform-1.runwater.app
  - msg-98.platform-1.runwater.app
  - msg-99.platform-1.runwater.app
  - msg-100.platform-1.runwater.app
loglevel: error

#ca_file: /opt/ejabberd/conf/cacert.pem

## If you already have certificates, list them here
#certfiles:
 #  - /opt/ejabberd/conf/ejabberd.pem

listen:
  -
    port: 5222
    ip: "::"
    module: ejabberd_c2s
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    starttls_required: true
  -
    port: 5223
    ip: "::"
    module: ejabberd_c2s
    max_stanza_size: 262144
    shaper: c2s_shaper
    access: c2s
    tls: true
  -
    port: 5269
    ip: "::"
    module: ejabberd_s2s_in
    max_stanza_size: 524288
    shaper: s2s_shaper
  -
    port: 5443
    ip: "::"
    module: ejabberd_http
    tls: true
    request_handlers:
      /admin: ejabberd_web_admin
      /oauth: ejabberd_oauth
      /api: mod_http_api
      /bosh: mod_bosh
      /captcha: ejabberd_captcha
      /upload: mod_http_upload
      /ws: ejabberd_http_ws
  -
    port: 5280
    ip: "::"
    tls: true
    module: ejabberd_http
    request_handlers:
      /admin: ejabberd_web_admin
  -
    port: 5380
    ip: "::"
    tls: false
    module: ejabberd_http
    request_handlers:
      /.well-known/acme-challenge: ejabberd_acme      
  -
    port: 3478
    ip: "::"
    transport: udp
    module: ejabberd_stun
    use_turn: true
    ## The server's public IPv4 address:
    # turn_ipv4_address: "203.0.113.3"
    ## The server's public IPv6 address:
    # turn_ipv6_address: "2001:db8::3"
  -
    port: 1883
    ip: "::"
    module: mod_mqtt
    backlog: 1000

oauth_access: all

acme:
  ## Staging environment
#  ca_url: https://acme-staging-v02.api.letsencrypt.org/directory
  contact: "mailto:jhaigh@bitwebsvc.net"
  auto: true
 # cert_type: rsa
  ## Production environment (the default):
  #ca_url: "https://acme-v02.api.letsencrypt.org/directory"
  ca_url: "https://acme-v02.api.letsencrypt.org/directory"

s2s_use_starttls: optional

disable_sasl_mechanisms:
  - "SCRAM-SHA-512"
  - "SCRAM-SHA-512-PLUS"
acl:
  local:
    user_regexp: ""
  loopback:
    ip:
      - 127.0.0.0/8
      - ::1/128
  admin:
    user:
      - "admin@msg-1.platform-1.runwater.app"
  apicommands:
    user:
      - "admin@msg-1.platform-1.runwater.app"
access_rules:
  local:
    allow: local
  c2s:
    deny: blocked
    allow: all
  announce:
    allow: admin
  configure:
    allow: admin
  muc_create:
    allow: local
  pubsub_createnode:
    allow: local
  trusted_network:
    allow: loopback

api_permissions:
  "console commands":
    from:
      - ejabberd_ctl
    who: all
    what: "*"
  "admin access":
    who:
      #access:
       # allow:
       #   - acl: loopback
       #   - acl: admin
      oauth:
        #scope: "sasl_auth"
        scope: "ejabberd:admin"
        scope: "registered_users"
        access:
          allow:
            #- acl: loopback
            #- acl: admin
            - acl: apicommands
    what:
      - "*"
      - "!stop"
      - "!start"
  "public commands":
    who:
      ip: 127.0.0.1/8
    what:
      - status
      - connected_users_number

shaper:
  normal:
    rate: 3000
    burst_size: 20000
  fast: 100000

shaper_rules:
  max_user_sessions: 10
  max_user_offline_messages:
    5000: admin
    100: all
  c2s_shaper:
    none: admin
    normal: all
  s2s_shaper: fast

modules:
  mod_adhoc: {}
  mod_admin_extra: {}
  mod_announce:
    access: announce
  mod_avatar: {}
  mod_blocking: {}
  mod_bosh: {}
  mod_caps: {}
  mod_carboncopy: {}
  mod_client_state: {}
  mod_configure: {}
  mod_disco: {}
  mod_fail2ban: {}
  mod_http_api: {}
  mod_http_upload:
    put_url: https://@HOST@:5443/upload
    custom_headers:
      "Access-Control-Allow-Origin": "https://@HOST@"
      "Access-Control-Allow-Methods": "GET,HEAD,PUT,OPTIONS"
      "Access-Control-Allow-Headers": "Content-Type"
  mod_last: {}
  mod_mam:
    ## Mnesia is limited to 2GB, better to use an SQL backend
    ## For small servers SQLite is a good fit and is very easy
    ## to configure. Uncomment this when you have SQL configured:
    ## db_type: sql
    assume_mam_usage: true
    default: always
  mod_mqtt: {}
  mod_muc:
    access:
      - allow
    access_admin:
      - allow: admin
    access_create: muc_create
    access_persistent: muc_create
    access_mam:
      - allow
    default_room_options:
      mam: true
  mod_muc_admin: {}
  mod_offline:
    access_max_user_messages: max_user_offline_messages
  mod_ping: {}
  mod_privacy: {}
  mod_private: {}
  mod_proxy65:
    access: local
    max_connections: 5
  mod_pubsub:
    access_createnode: pubsub_createnode
    plugins:
      - flat
      - pep
    force_node_config:
      ## Avoid buggy clients to make their bookmarks public
      storage:bookmarks:
        access_model: whitelist
  mod_push: {}
  mod_push_keepalive: {}
  mod_register:
    ## Only accept registration requests from the "trusted"
    ## network (see access_rules section above).
    ## Think twice before enabling registration from any
    ## address. See the Jabber SPAM Manifesto for details:
    ## https://github.com/ge0rg/jabber-spam-fighting-manifesto
    ip_access: trusted_network
  mod_roster:
    versioning: true
  mod_s2s_dialback: {}
  mod_shared_roster: {}
  mod_stream_mgmt:
    resend_on_timeout: if_offline
  mod_stun_disco: {}
  mod_vcard: {}
  mod_vcard_xupdate: {}
  mod_version:
    show_os: false

### Local Variables:
### mode: yaml
### End:
### vim: set filetype=yaml tabstop=8
